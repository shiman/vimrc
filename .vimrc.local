set nospell
colorscheme despacio
set background=dark
let mapleader = "\<Space>"

map <BS> :Commentary<CR>
autocmd FileType cpp setlocal commentstring=//\ %s

" Clear the highlighted search results
nmap <silent> <leader>/ :nohl<CR>

" Buffer Management
nnoremap <Leader>bd :bd<CR>
nnoremap <Leader>bD :bd!<CR>
nnoremap <Leader>ww :w<CR>
nnoremap <Leader>bb :Unite -buffer-name=buffers -start-insert buffer<CR>
map <S-H> :bp<CR>
map <S-L> :bn<CR>

" Layout management
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-L> <C-W>l
map <C-H> <C-W>h
map <Leader>wd <C-W>q
map <Leader>wD <C-W>q!
map <silent> <C-W><Bar> :vsplit<CR>
map <silent> <C-W><bSlash> :split<CR>
map = <c-w>+  " Move boundary up
map - <c-w>-  " Move boundary down
map _ <c-w>_  " Make current split fullscreen

" Emacs style in insertion mode
map! <C-a> <Home>
map! <C-e> <End>
map! <C-f> <Right>
map! <C-b> <Left>

" Helpers for finding files
nnoremap <Leader>ff :Unite -buffer-name=files -start-insert file file/new file_mru<CR>
nnoremap <Leader>pp :Unite -buffer-name=files -start-insert file file_rec/async:! file/new file_mru<CR>
nnoremap <Leader>ack :Unite -no-empty -no-resize grep:.<CR>

" Make Unite appear like ctrlp
call unite#custom#profile('default', 'context', {
 \   'start_insert': 1,
 \   'winheight': 10,
 \   'direction': 'botright',
 \ })
call unite#filters#matcher_default#use(['matcher_fuzzy'])

" Airline
let g:airline_theme = 'distinguished'
let g:airline_powerline_fonts=1
let g:airline_left_sep='›'  " Slightly fancier than '>'
let g:airline_right_sep='‹' " Slightly fancier than '<'
let g:bufferline_echo = 0  " disable buffer names shown in the command area
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = ' '
let g:airline#extensions#tabline#fnamemod = ':t'  " let the tab bar show file name only
let g:airline#extensions#tabline#enabled = 1  " enable buffers on the tab bar
let g:airline#extensions#tabline#close_symbol = '×'
let g:airline#extensions#tabline#show_close_button = 0
let g:airline_section_c = '%t'
set laststatus=2

" Ycmd settings
let g:ycm_confirm_extra_conf = 0
map <F12> :YcmCompleter GoToDefinition<CR>
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'

" Folding
set foldmethod=syntax

" Shortcut to terminal
set shell=zsh
noremap <silent> <C-d> :sh<CR>

" GUI
set guifont=Monaco:h12
set guioptions-=L  " left scroll bar
set guioptions-=r  " right scroll bar
if OSX() && has("gui_running")
    colorscheme solarized
    set background=light
    let g:airline_theme = 'solarized'
    set guifont=Source\ Code\ Pro\ for\ Powerline:h18
endif

" Git
nnoremap <silent> <Leader>gs :Gstatus<CR>
nnoremap <silent> <Leader>gd :Gdiff<CR>
nnoremap <silent> <Leader>gc :Gcommit<CR>
nnoremap <silent> <Leader>gb :Gblame<CR>
nnoremap <silent> <Leader>gl :Glog<CR>
nnoremap <silent> <Leader>gp :Git push<CR>
nnoremap <silent> <Leader>gr :Gread<CR>
nnoremap <silent> <Leader>gw :Gwrite<CR>
nnoremap <silent> <Leader>ge :Gedit<CR>
" Mnemonic _i_nteractive
nnoremap <silent> <Leader>gi :Git add -p %<CR>
nnoremap <silent> <Leader>gg :SignifyToggle<CR>
